
//SESSION START
0,Fri Feb 16 13:23:46 EST 2024,15601
//START OF FILE: comp533/mvc/ModelImpl.java
package comp533.mvc;

import gradingTools.comp533s19.assignment0.AMapReduceTracer;
import java.util.Map;

import comp533.KeyValue;
import comp533.factory.Mapper;
import comp533.factory.MapperFactory;
import comp533.factory.Reducer;
import comp533.factory.ReducerFactory;

import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

public class ModelImpl extends AMapReduceTracer implements Model {
	private final PropertyChangeSupport propertyChangeSupport = new PropertyChangeSupport(this);
	// editable
	private String inputBuffer;
	// readonly
	private Map<String, Integer> _map;
	private Mapper<String, Integer> mapper;
	private Reducer<String, Integer> reducer;
	
    public ModelImpl() {
        this._map = new HashMap<String, Integer>();
        this.mapper = MapperFactory.getMapper();
        this.reducer = ReducerFactory.getReducer();
    }

    @Override
	public String getInputString() {
		return inputBuffer;
	}
	
    @Override
	public void setInputString(String newVal) {
		// fire PropertyChangeEvent
		String oldVal = inputBuffer;
		inputBuffer = newVal;
		propertyChangeSupport.firePropertyChange("InputString", oldVal, newVal);
		countTokens();
		propertyChangeSupport.firePropertyChange("Result", null, _map);
	}

    private void countTokens() {
    	_map.clear();
        String[] strings = this.inputBuffer.split(" ");
        List<String> tokens = Arrays.asList(strings);
        List<KeyValue<String, Integer>> keyValuePairs = mapper.map(tokens);
        this._map = reducer.reduce(keyValuePairs);
    }

    @Override
	public Map<String, Integer> getMap() {
		return _map;
	}
	
	@Override
	public void addPropertyChangeListener(PropertyChangeListener listener) {
		propertyChangeSupport.addPropertyChangeListener(listener);
	}

	@Override
    public String toString() {
        return MODEL;
    }
}


//END OF FILE
//START OF FILE: comp533/mvc/Controller.java
package comp533.mvc;

public interface Controller {
	void getUserInput();
	void setUserInput(String newVal);
}

//END OF FILE
//START OF FILE: comp533/factory/ReducerFactory.java
package comp533.factory;
import gradingTools.comp533s19.assignment0.AMapReduceTracer;

public class ReducerFactory extends AMapReduceTracer {
	private static Reducer<String, Integer> reducer = new TokenCountingReducer();
	
	public ReducerFactory() {}
	
	public static Reducer<String, Integer> getReducer() {
		return reducer;
	}
	
	public static void setReducer(Reducer newReducer) {
		reducer = newReducer;
		traceSingletonChange(TokenCountingReducer.class, newReducer);
	}

}

//END OF FILE
//START OF FILE: comp533/factory/TokenCountingReducer.java
package comp533.factory;

import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import gradingTools.comp533s19.assignment0.AMapReduceTracer;

import comp533.KeyValue;

public class TokenCountingReducer extends AMapReduceTracer implements Reducer<String, Integer> {

	public TokenCountingReducer() {}
	
	@Override
	public Map<String, Integer> reduce(List<KeyValue<String, Integer>> keyValues) {
		Map<String, Integer> map = new HashMap<>();
		Iterator<KeyValue<String, Integer>> iterator = keyValues.iterator();
		String key;
		Integer val;

		while (iterator.hasNext()) {
			KeyValue<String, Integer> pair = iterator.next();
			key = pair.getKey();
			val = pair.getValue();
			if (map.containsKey(key)) {
				map.put(key, map.get(key) + val);
			} else map.put(key, val);
			
		}
		traceReduce(keyValues, map);
		return map;
	}
	
	@Override
	public String toString() {
		return REDUCER;
	}
}

//END OF FILE
//START OF FILE: comp533/KeyValue.java
package comp533;

public interface KeyValue<K, V> {
	K getKey();
	V getValue();
	void setValue(V newVal);
}

//END OF FILE
//START OF FILE: comp533/Slave.java
package comp533;


public class Slave extends Runnable implements Slave {


}

//END OF FILE
//START OF FILE: comp533/mvc/View.java
package comp533.mvc;

public interface View {

}

//END OF FILE
//START OF FILE: comp533/mvc/ControllerImpl.java
package comp533.mvc;
import gradingTools.comp533s19.assignment0.AMapReduceTracer;
import java.util.Scanner;


public class ControllerImpl extends AMapReduceTracer implements Controller {
    private Scanner in;
    private String currentString;
    private Model model;

    public ControllerImpl(Model model) {
        this.in = new Scanner(System.in);
        this.model = model;
    }

    @Override
    public void getUserInput() {
		traceNumbersPrompt();
		while (true) {
			currentString = in.nextLine();
			if (currentString.equals("quit")) break;
			model.setInputString(currentString);
			traceNumbersPrompt();
		}
		this.in.close();
		traceQuit();
    }
    
    @Override
    public void setUserInput(String val) {
    	this.currentString = val;
    }
    
    @Override
    public String toString() {
    	return CONTROLLER;
    }
}

//END OF FILE
//START OF FILE: comp533/count/TokenCountingMapper.java
package comp533.count;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import comp533.KeyValue;
import comp533.KeyValueImpl;
import comp533.factory.Mapper;
import gradingTools.comp533s19.assignment0.AMapReduceTracer;

public class TokenCountingMapper extends AMapReduceTracer implements Mapper<String, Integer> {
	private static TokenCountingMapper instance;
	
	public TokenCountingMapper() {}
	
	public static Mapper<String, Integer> getInstance() {
		if (instance == null) {
			instance = new TokenCountingMapper();
		}
		return instance;
	}
	
	@Override
	public List<KeyValue<String, Integer>> map(List<String> input) {
		List<KeyValue<String, Integer>> keys = new ArrayList<>();
		Iterator<String> iterator = input.iterator();
		
		while (iterator.hasNext()) {
			keys.add(new KeyValueImpl(iterator.next(), 1));
		}
		traceMap(input, keys);
		return keys;
	}
	
	@Override
	public String toString() {
		return TOKEN_COUNTING_MAPPER;
	}
}

//END OF FILE
//START OF FILE: comp533/KeyValueImpl.java
package comp533;

public class KeyValueImpl implements KeyValue<String, Integer> {
	private String key;
	private int val;
	
	public KeyValueImpl(String key, int val) {
		this.key = key;
		this.val = val;
	}
	@Override
	public String getKey() {
		return this.key;
	}
	
	@Override
	public Integer getValue() {
		return this.val;
	}
	
	@Override
	public void setValue(Integer newVal) {
		int oldVal = val;
		val = newVal;
	}
	
	@Override
	public String toString() {
		return "(" + key + ", " + val + ")";
	}
	

}

//END OF FILE
//START OF FILE: comp533/MapReduceConfigurationImpl.java
package comp533;


import comp533.count.TokenCountingMapper;
import comp533.factory.MapperFactory;
import comp533.factory.ReducerFactory;
import comp533.factory.TokenCountingReducer;
import comp533.mvc.ModelImpl;
import comp533.mvc.ControllerImpl;
import comp533.mvc.ViewImpl;
import comp533.sum.IntSummingMapper;
import gradingTools.comp533s21.assignment1.interfaces.MapReduceConfiguration;


public class MapReduceConfigurationImpl implements MapReduceConfiguration {
	public MapReduceConfigurationImpl() {}
	@Override
	public Class getStandAloneTokenCounter() {
		return TokenCounter.class;
	}
	
	@Override
	public Class getStandAloneIntegerSummer() {
		return IntegerSummer.class;
	}
	
	@Override
	public Class getModelClass() {
		return ModelImpl.class;
	}
	
	@Override
	public Class getControllerClass() {
		return ControllerImpl.class;
	}
	
	@Override
	public Class getViewClass() {
		return ViewImpl.class;
	}
	
	@Override
	public Class getMapperFactory() {
		return MapperFactory.class;
	}
	
	@Override
	public Class getReducerFactory() {
		return ReducerFactory.class;
	}
	
	@Override
	public Class getKeyValueClass() {
		return KeyValue.class;
	}

	@Override
    public Class getTokenCountingMapperClass() {
    	return TokenCountingMapper.class;
    }

	@Override
    public Class getIntSummingMapperClass() {
    	// extra credit
    	return IntSummingMapper.class;
    }

	@Override
    public Class getReducerClass() {
    	return TokenCountingReducer.class;
    }

    // Return instances of the required objects, using the relevant factories
    // if they return these objects by default
	@Override
    public Object getTokenCountingMapper() {
    	// default object returned by Mapper factory
    	return MapperFactory.getMapper();
    }

	@Override
    public Object getIntSummingMapper() {
		return IntSummingMapper.getInstance();
    }

	@Override
    public Object getReducer() {
    	// default object returned by Reducer factory   
    	return ReducerFactory.getReducer();
    }

	@Override
	public Class getPartitionerClass() {
		 return null;
	 }

	@Override
	public Class getPartitionerFactory() {
		 return null;
	 }

	@Override
	public Object getPartitioner() {
		 return null;
	 }

	@Override
	public Class getJoinerClass() {
		 return null;
	 }

	@Override
	public Class getBarrierClass() {
		return null;
	}

	 @Override
	 public Class getSlaveClass() {
		 return null;
	 }
	 // return some instance of the Barrier and Joiner classes in the  methods
	 // below as these are not singletons
	 @Override
	 public Object getBarrier(int aNumThreads) {
		 return null;
	 }

	@Override
	public Object getJoiner(int aNumThreads) {
		return null;
	}

	    // --------------------A3--------------------------

	    
	    // The model stored in the server will now have a remote interface to be used 
	    // by the client to register its proxy. 
	    // The model class will have to be changed to implement  this interface. 
	    // If you change the name of this class, make sure you change the getModelClass
	    // method of the registry to reflect the name change.   
	@Override
    public Class getRemoteModelInterface() {
    	return null;
    }
	    
	    
	    // The client proxy also has a remote interface for remote callbacks
	@Override
	public Class getRemoteClientObjectInterface() {
    	return null;
    }
		
		// This is the class implementing the interface
	@Override
	public Class getRemoteClientObjectClass() {
		return null;
	}
		
		// For each application (token count, int sum), we now have two main classes,
		// one for the server and one for each client.
			
		// The main class of the server token counter.	
	@Override
	public Class getServerTokenCounter() {
		return null;
	}
	
	@Override
	// The main class of the server int summer.
    public Class getServerIntegerSummer() {
		return null;
    }
	    
    // The main class of both the client token counter and the int summer,
  	// since the reduction step is the same for both, and the client only
    // performs reduction
	@Override
    public Class getClientTokenCounter() {
    	return null;
    }
	    
    // A standalone class similar to the two classes in A2 implementing the Facebook 
    // map reduce algorithm
	@Override
	public Class getStandAloneFacebookMapReduce() {
		return null;
	}

	// The main class of the server facebook implementation
	@Override
	public Class getServerFacebookMapReduce() {
		return null;
	}
	// The main class of the client facebook implementation
	@Override
	public Class getRemoteClientFacebookMapReduce() {
		return null;
	}
}

//END OF FILE
//START OF FILE: comp533/mvc/ViewImpl.java
package comp533.mvc;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import gradingTools.comp533s19.assignment0.AMapReduceTracer;


public class ViewImpl extends AMapReduceTracer implements PropertyChangeListener, View {
	
	public ViewImpl() {
	}
	
	@Override
	public void propertyChange(final PropertyChangeEvent evt) {
		tracePropertyChange(evt);
	}
	
	@Override
	public String toString() {
		return VIEW;
	}
}
//END OF FILE
//START OF FILE: comp533/RunA2Tests.java
package comp533;
import grader.basics.execution.BasicProjectExecution;

import gradingTools.comp533s24.assignment2.S24Assignment2Suite;
import trace.grader.basics.GraderBasicsTraceUtility;

public class RunA2Tests {
	public static void main(String[] args) {
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		int maxPrintedTraces = 600;
		GraderBasicsTraceUtility.setMaxPrintedTraces(maxPrintedTraces);
		// Change this number if all traces together are longer than 2000
		int maxTraces = 2000;
		GraderBasicsTraceUtility.setMaxTraces(maxTraces);
		// Change this number if your process times out prematurely
		int processTimeOut = 5;
		BasicProjectExecution.setProcessTimeOut(processTimeOut);
		// You need to always call such a method
		S24Assignment2Suite.main(args);
	}
}

//END OF FILE
//START OF FILE: comp533/factory/Reducer.java
package comp533.factory;

import java.util.Map;

import comp533.KeyValue;

import java.util.List;

public interface Reducer<K, V> {
	Map<K, V> reduce(List<KeyValue<K, V>> keyValues); 
}
//END OF FILE
//START OF FILE: comp533/IntegerSummer.java
package comp533;

import comp533.factory.Mapper;
import comp533.factory.MapperFactory;
import comp533.mvc.Controller;
import comp533.mvc.ControllerImpl;
import comp533.mvc.Model;
import comp533.mvc.ModelImpl;
import comp533.mvc.View;
import comp533.mvc.ViewImpl;
import comp533.sum.IntSummingMapper;

public class IntegerSummer {
	
public static void main(final String[] args) {
    final Mapper<String, Integer> mapper = new IntSummingMapper();
    MapperFactory.setMapper(mapper);

    final Model model = new ModelImpl();
	final ViewImpl view = new ViewImpl();
    final Controller controller = new ControllerImpl(model);
	model.addPropertyChangeListener(view);
	controller.getUserInput();
	}
}

//END OF FILE
//START OF FILE: comp533/mvc/Model.java
package comp533.mvc;

import java.util.Map;
import java.beans.PropertyChangeListener;

public interface Model {
	String getInputString();
	void setInputString(String newVal);
	Map<String, Integer> getMap();
	void addPropertyChangeListener(PropertyChangeListener listener);
}

//END OF FILE
//START OF FILE: comp533/factory/MapperFactory.java
package comp533.factory;

import comp533.count.TokenCountingMapper;
import gradingTools.comp533s19.assignment0.AMapReduceTracer;

public class MapperFactory extends AMapReduceTracer {
	private static Mapper<String, Integer> mapper = TokenCountingMapper.getInstance();
	
	public MapperFactory() {}
	
	public static Mapper<String, Integer> getMapper() {
		return mapper;
	}
	
	public static void setMapper(Mapper<String, Integer> newMapper) {
		mapper = newMapper;
		traceSingletonChange(MapperFactory.class, newMapper);
	}
}

//END OF FILE
//START OF FILE: comp533/TokenCounter.java
package comp533;

import comp533.mvc.ControllerImpl;
import comp533.mvc.ModelImpl;
import comp533.mvc.ViewImpl;

public class TokenCounter {
	public static void main(String[] args) {
		ModelImpl model = new ModelImpl();
		ControllerImpl controller = new ControllerImpl(model);
		ViewImpl view = new ViewImpl();
		model.addPropertyChangeListener(view);
		controller.getUserInput();
		// connect view as an observable of the model by calling addPropertyChangeListener() in the model, passing it to the view.
		// instantiate the controller, passing a reference of the model to it
	}

}


//END OF FILE
//START OF FILE: comp533/factory/Mapper.java
package comp533.factory;

import java.util.List;

import comp533.KeyValue;

public interface Mapper<K, V> {
	
	List<KeyValue<K, V>> map(List<String> strings);
}

//END OF FILE
//START OF FILE: comp533/sum/IntSummingMapper.java
package comp533.sum;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import comp533.KeyValue;
import comp533.KeyValueImpl;
import comp533.factory.Mapper;
import gradingTools.comp533s19.assignment0.AMapReduceTracer;

public class IntSummingMapper extends AMapReduceTracer implements Mapper<String, Integer> {
	
	private static IntSummingMapper instance;
	
	public IntSummingMapper() {}
	
	public static IntSummingMapper getInstance() {
		if (instance == null) {
			instance = new IntSummingMapper();
		}
		return instance;
	}
	
	@Override
	public List<KeyValue<String, Integer>> map(List<String> strings) {
		List<KeyValue<String, Integer>> keys = new ArrayList<>();
		Iterator<String> iterator = strings.iterator();

		while (iterator.hasNext()) {
			KeyValue<String, Integer> pair = new KeyValueImpl("ResultKey", Integer.parseInt(iterator.next()));
//			System.out.println(pair);
			keys.add(pair);
		}
		traceMap(strings, keys);
		return keys;
	}
	
	@Override
	public String toString() {
		return INT_SUMMING_MAPPER;
	}

}

//END OF FILE

//SESSION END

//SESSION START
1,Fri Feb 16 14:19:39 EST 2024,3170
//START OF FILE: comp533/mvc/Controller.java
=109	+%09void initSlaveThreads();%0A	=2
//END OF FILE
//START OF FILE: comp533/mvc/ModelImpl.java
=146	+Slave;%0Aimport comp533.	=16	-0	=193	+import java.util.ArrayList;%0A	=412	+private int numThreads;%0A%09private List%3CThread%3E threads;%0A%09	=179	+        this.threads = new ArrayList%3CThread%3E();%0A	=626	-0	=50	+%0A    %7D%0A    %0A    @Override%0A    public List%3CThread%3E getThreads() %7B%0A    %09return this.threads;%0A    %7D%0A    %0A    @Override%0A    public int getNumThreads() %7B%0A    %09return this.numThreads;%0A    %7D%0A    %0A    @Override%0A    public void setNumThreads(int num) %7B%0A    %09int oldNum = this.numThreads;%0A    %09propertyChangeSupport.firePropertyChange(%22NumThreads%22, oldNum, num);%0A    %09this.numThreads = num;%0A%0A    %09for (int i = 0; i %3C num; i++) %7B%0A    %09%09Thread slave = new Thread(new Slave(i, this));%0A    %09%09propertyChangeSupport.firePropertyChange(%22Threads%22, null, slave);%0A    %09%09this.threads.add(slave);%0A    %09%7D	=305
//END OF FILE
//START OF FILE: comp533/factory/Partitioner.java
package comp533.factory;

public interface Partitioner<K, V> {
	public int getPartition(K key, V value, int numberOfPartitions);
}

//END OF FILE
//START OF FILE: comp533/mvc/Model.java
=39	+List;%0Aimport java.util.	=234	-1	+%09int getNumThreads();	=1	+%09void setNumThreads(int numThreads);%0A%09List%3CThread%3E getThreads();%0A%7D
//END OF FILE
//START OF FILE: comp533/Slave.java
=18	+import comp533.mvc.Model;%0Aimport gradingTools.comp533s19.assignment0.AMapReduceTracer;%0A	=28	+AMap	=1	+ed	=1	+ceTracer impleme	=1	+ts SlaveI	=1	+terf	=1	+ce %7B%0A%09private int slaveNum;%0A%09private Model model;%0A%0A%09pu	=2	+ic Slav	=1	+(int	=1	+slaveNumber, Model model) %7B%0A%09%09th	=1	+s.slaveNu	=1	-1	+ = s	=1	+av	=1	+Nu	=1	+b	=1	-1	+r;%0A%09%09	=1	+hi	=1	+.model	=1	+= model;%0A%09%09%0A%09%7D%0A%09public void run() %7B%0A%09%09%0A%09%7D%0A%09%0A%09public synchronized void notify	=5	+()	=3	+%09%09traceNotify();	=1	+%09%09this.notify();%0A%09%7D%0A%0A%09public String toString() %7B%0A%09%09return SLAVE;%0A%09%7D%0A%09%0A%09	=3
//END OF FILE
//START OF FILE: comp533/mvc/ControllerImpl.java
=388	+    %0A    %0A	=267	+);%0A    %7D%0A    %0A    @Override%0A    public void initSlaveThreads() %7B%0A    %09traceThreadPrompt();%0A    %09int numThreads = in.nextInt();%0A    %09model.setNumThreads(numThreads	=190
//END OF FILE
//START OF FILE: comp533/factory/PartitionerImpl.java
package comp533.factory;
import gradingTools.comp533s19.assignment0.AMapReduceTracer;

public class PartitionerImpl extends AMapReduceTracer implements Partitioner<String, Integer> {
	private static PartitionerImpl instance;

	public PartitionerImpl() {}
	
	public static PartitionerImpl getInstance() {
		if (instance == null) {
			instance = new PartitionerImpl();
		}
		return instance;
	}
	
	@Override
	public int getPartition(String key, Integer value, int numberOfPartitions) {
		// determines which partition list the keyvalue pair belong
		int partition;
		char firstChar = key.charAt(0);
		if (!Character.isLetter(firstChar)) partition = 0; 
		else {
			firstChar = Character.toLowerCase(firstChar);
			partition = (int)Math.floor((firstChar - 'a' + 1) / (double) numberOfPartitions);
		}
		tracePartitionAssigned(key, value, partition, numberOfPartitions);
		return partition;
	}
	
	public String toString() {
		return PARTITIONER;
	}
}

//END OF FILE
//START OF FILE: comp533/TokenCounter.java
=365	+initSlaveThreads();%0A%09%09controller.	=220
//END OF FILE
//START OF FILE: comp533/factory/PartitionerFactory.java
package comp533.factory;

public class PartitionerFactory {
	private static Partitioner<String, Integer> partitioner = PartitionerImpl.getInstance();
	
	public static Partitioner<String, Integer> getPartitioner() {
		return partitioner;
	}
	
	public static void setPartitioner(Partitioner<String, Integer> newPartitioner) {
		partitioner = newPartitioner;
	}
}

//END OF FILE
//START OF FILE: comp533/MapReduceConfigurationImpl.java
=122	+PartitionerFactory;%0Aimport comp533.factory.PartitionerImpl;%0Aimport comp533.factory.	=1942	+Partitio	=1	-1	+erImp	=1	+.c	=1	+ass	=68	+Partitio	=1	-2	+erFactory.c	=1	+ass	=62	+Partitio	=1	-3	+erFactory.getPartitioner()	=191	-2	+S	=1	+ave.c	=1	+ass	=5	+%0A	=2171
//END OF FILE
//START OF FILE: comp533/SlaveInterface.java
package comp533;

public interface SlaveInterface extends Runnable {
	void run();
}

//END OF FILE

//SESSION END

//SESSION START
2,Fri Feb 16 14:21:15 EST 2024,2
//START OF FILE: comp533/factory/PartitionerImpl.java
=765	+(	=26	+)	=156
//END OF FILE

//SESSION END

//SESSION START
3,Fri Feb 16 14:25:59 EST 2024,76
//START OF FILE: comp533/factory/PartitionerImpl.java
=712	-4	=1	+n	=1	+ maxS	=1	-2	+ze	=13	-1	+cei	=1	-3	=25	-1	=27	+); %0A%09%09%09partition = (int)Math.floor((firstChar - 'a' + 1) / ((double) maxSize	=157
//END OF FILE

//SESSION END

//SESSION START
4,Fri Feb 16 14:26:27 EST 2024,-6
//START OF FILE: comp533/factory/PartitionerImpl.java
=742	-9	+'z'	=274
//END OF FILE

//SESSION END

//SESSION START
5,Fri Feb 16 14:51:38 EST 2024,994
//START OF FILE: comp533/factory/BarrierImpl.java
package comp533.factory;
import gradingTools.comp533s19.assignment0.AMapReduceTracer;

public class BarrierImpl extends AMapReduceTracer implements Barrier {
	private int barrierCount;
	private int numThreads;
	
	public BarrierImpl(int barrierCount) {
		this.barrierCount = barrierCount;		
		this.numThreads = barrierCount;
		traceBarrierCreated(this, numThreads);
	}
	
	public synchronized void barrier() {
		if (--barrierCount == 0) {
			this.notifyAll();
			barrierCount = numThreads;
			traceBarrierReleaseAll(this, numThreads, barrierCount);
		}
		try {
			traceBarrierWaitStart(this, numThreads, barrierCount);
			wait();
			traceBarrierWaitEnd(this, numThreads, barrierCount);
		} catch (InterruptedException e) {
			Thread.currentThread().interrupt();
			System.err.println("Thread Interrupted");
		}
	}
	
	public String toString() {
		return BARRIER;
	}
}

//END OF FILE
//START OF FILE: comp533/factory/Barrier.java
package comp533.factory;

public interface Barrier {

}

//END OF FILE
//START OF FILE: comp533/MapReduceConfigurationImpl.java
=84	+BarrierImpl;%0Aimport comp533.factory.	=2399	-2	+BarrierImp	=1	+.c	=1	+ass	=263	-2	+ew BarrierImp	=1	+(aNumThreads)	=1983
//END OF FILE

//SESSION END

//SESSION START
7,Fri Feb 16 15:07:07 EST 2024,614
//START OF FILE: comp533/factory/Joiner.java
package comp533.factory;

public interface Joiner {

}

//END OF FILE
//START OF FILE: comp533/factory/JoinerImpl.java
package comp533.factory;

public class JoinerImpl implements Joiner {
	private int numThreads;
	private int count;
	
	public JoinerImpl(int numThreads) {
		this.numThreads = numThreads;
		this.count = 0;
	}
	
	public synchronized void finished() {
		count++;
	}
	
	public synchronized void join() {
		while (count < numThreads) {
			try {
				wait();
			} catch(InterruptedException e) {
				Thread.currentThread().interrupt();
				System.err.println("Thread Interrupted");
			}
		}
	}

}

//END OF FILE
//START OF FILE: comp533/MapReduceConfigurationImpl.java
=120	+JoinerImpl;%0Aimport comp533.factory.	=2334	+Joi	=1	-1	+erImp	=1	+.c	=1	+ass	=440	+ew JoinerImpl(aN	=1	-2	+mThreads)	=1908
//END OF FILE

//SESSION END

//SESSION START
8,Fri Feb 16 15:11:47 EST 2024,238
//START OF FILE: comp533/factory/JoinerImpl.java
=25	+import gradingTools.comp533s19.assignment0.AMapReduceTracer;%0A	=24	+ extends AMapReduceTracer	=156	+%09traceJoinerCreated(this, numThreads);%0A%09	=2	-1	=52	+%09traceJoinerFinishedTask(this, numThreads, count);%0A%09	=83	+traceJoinerWaitStart(this, numThreads, count);%0A%09%09%09%09	=11	+%09traceJoinerWaitEnd(this, numThreads, count);%0A%09%09%09	=37	+%7D%0A%09%09%7D%0A	=1	-2	+%09t	=1	-1	=1	-2	=1	-3	=1	+Joi	=1	-3	+e	=1	+Rel	=2	-7	+s	=1	-5	=1	-10	=1	-9	+h	=1	-3	+s, 	=1	-2	+um	=6	+s,	=1	-6	+co	=1	-1	+n	=1	-3	=2	-9	=7
//END OF FILE

//SESSION END

//SESSION START
9,Fri Feb 16 15:13:05 EST 2024,13
//START OF FILE: comp533/factory/JoinerImpl.java
=676	+count = 0;%0A%09%09	=51
//END OF FILE

//SESSION END

//SESSION START
10,Fri Feb 16 15:14:24 EST 2024,50
//START OF FILE: comp533/factory/JoinerImpl.java
=737	+%09%0A%09public String toString() %7B%0A%09%09return JOINER;%0A%09%7D%0A	=3
//END OF FILE

//SESSION END

//SESSION START
12,Fri Feb 16 15:17:51 EST 2024,12
//START OF FILE: comp533/factory/JoinerImpl.java
=735	+%09notify();%0A%09	=55
//END OF FILE

//SESSION END

//SESSION START
13,Fri Feb 16 15:19:08 EST 2024,0
//START OF FILE: comp533/factory/JoinerImpl.java
=676	+notify();%0A%09%09	=55	-12	=59
//END OF FILE

//SESSION END

//SESSION START
14,Fri Feb 16 15:20:24 EST 2024,-3
//START OF FILE: comp533/factory/JoinerImpl.java
=478	-2	=1	-2	+f	=319
//END OF FILE

//SESSION END

//SESSION START
15,Fri Feb 16 15:24:21 EST 2024,-70
//START OF FILE: comp533/factory/JoinerImpl.java
=474	+throws InterruptedException 	=4	+wh	=1	-1	+le	=29	-10	=48	-1	=8	-1	=50	-1	=1	-53	=16	-6	+n	=1	+t	=1	-10	+fy	=1	-23	=59
//END OF FILE

//SESSION END

//SESSION START
16,Fri Feb 16 15:27:25 EST 2024,0
//START OF FILE: comp533/factory/JoinerImpl.java
=386	+notify();%0A%09%09	=273	-12	=58
//END OF FILE

//SESSION END

//SESSION START
17,Fri Feb 16 15:32:55 EST 2024,-95
//START OF FILE: comp533/factory/BarrierImpl.java
=406	-13	+th	=1	-1	+ows Int	=2	-2	+r	=1	-1	+p	=1	-12	+edExcep	=1	-1	=1	-3	=1	-10	+n %7B	=1	-1	=14	-13	+--	=4	-25	+w	=2	-9	+l	=1	-4	=1	+(	=12	+ %3E 0	=1	-11	=131	-2	+%0A%09%09b	=1	-9	=2	-3	+i	=1	-8	+rC	=1	+u	=1	+t	=1	-2	+=	=1	-5	+num	=6	-6	+s;%0A%09%09	=1	+o	=1	-9	=1	-8	+fyAll	=6	-4	=1	-4	=1	+aceBa	=1	-2	=2	-2	+erRe	=1	-1	+easeAll	=1	-1	+this, num	=6	+s,	=1	-3	+barri	=2	-1	+Co	=1	-1	+n	=1	-3	=2	-4	=57
//END OF FILE

//SESSION END

//SESSION START
18,Fri Feb 16 15:34:41 EST 2024,0
//START OF FILE: comp533/factory/BarrierImpl.java
=614	-44	=54	+;%0A%09%09notifyAll();%0A%09%09barrierCount = numThreads	=58
//END OF FILE

//SESSION END

//SESSION START
19,Fri Feb 16 15:36:38 EST 2024,34
//START OF FILE: comp533/factory/BarrierImpl.java
=456	+if (barrierCount == 0) %7B%0A%09%09%09notifyAll();%0A%09%09%09traceBarrierReleaseAll(this, numThreads, barrierCount);%0A%09%09%09barrierCount = numThreads;%0A%09%09%7D%0A%09%09	=155	-102	=57
//END OF FILE

//SESSION END

//SESSION START
21,Fri Feb 16 15:39:34 EST 2024,0
//START OF FILE: comp533/factory/BarrierImpl.java
=484	-16	=84	+;%0A%09%09%09notifyAll()	=220
//END OF FILE

//SESSION END

//SESSION START
22,Fri Feb 16 15:41:03 EST 2024,0
//START OF FILE: comp533/factory/BarrierImpl.java
=543	+notifyAll();%0A%09%09%09	=25	-16	=220
//END OF FILE

//SESSION END

//SESSION START
23,Fri Feb 16 15:41:53 EST 2024,-36
//START OF FILE: comp533/factory/BarrierImpl.java
=592	-30	=57	-1	=8	-1	=54	-4	=57
//END OF FILE

//SESSION END

//SESSION START
26,Mon Feb 19 10:51:15 EST 2024,23
//START OF FILE: comp533/factory/BarrierImpl.java
=589	+ else %7B	=1	+    	=57	+    	=10	+    	=54	+%0A%09%09%7D	=57
//END OF FILE

//SESSION END

//SESSION START
28,Mon Feb 19 10:52:44 EST 2024,41
//START OF FILE: comp533/factory/Joiner.java
=52	+%09void join() throws InterruptedException;	=3
//END OF FILE

//SESSION END

//SESSION START
29,Mon Feb 19 10:53:44 EST 2024,-8
//START OF FILE: comp533/factory/BarrierImpl.java
=456	-52	+w	=2	-9	+l	=1	-4	=1	-27	=1	-6	=13	-1	+%3E	=1	-20	+0)	=139	+%09%0A%09%09	=1	+%0A%09%09traceBarrierReleaseAll(this, numThreads, barrierCount);%0A%09%09notifyAll();%0A%09%09barrierCount = numThreads;	=57
//END OF FILE

//SESSION END

//SESSION START
30,Mon Feb 19 10:54:40 EST 2024,20
//START OF FILE: comp533/factory/BarrierImpl.java
=456	-2	=1	-2	+f	=163	+ else %7B	=1	+    	=58	+    	=15	+    	=28	+%0A%09%09%7D	=57
//END OF FILE

//SESSION END

//SESSION START
31,Mon Feb 19 11:19:09 EST 2024,1458
//START OF FILE: comp533/mvc/ModelImpl.java
=105	+import java.util.Queue;%0Aimport java.util.concurrent.ArrayBlockingQueue;%0Aimport java.util.concurrent.BlockingQueue;%0A%0A	=46	+;%0Aimport comp533.factory.Barrier;%0Aimport comp533.factory.BarrierImpl;%0Aimport comp533.factory.Joiner;%0Aimport comp533.factory.JoinerImpl	=305	+import java.util.LinkedList;%0A	=417	+private BlockingQueue%3CKeyValue%3CString, Integer%3E%3E keyValueQueue;%0A%09private List%3CLinkedList%3CKeyValue%3CString, Integer%3E%3E%3E reductionQueueList;%0A%09private Joiner joiner;%0A%09private Barrier barrier;%0A%09	=231	+    this.keyValueQueue = new ArrayBlockingQueue%3C%3E(BUFFER_SIZE);%0A        this.reductionQueueList = new ArrayList%3C%3E();%0A        this.joiner = new JoinerImpl(0);%0A        this.barrier = new BarrierImpl(0);%0A    	=2	+%0A    @Override%0A    public BlockingQueue%3CKeyValue%3CString, Integer%3E%3E getKeyValueQueue() %7B%0A    %09return this.keyValueQueue;%0A    %7D%0A    %0A    @Override%0A    public List%3CLinkedList%3CKeyValue%3CString, Integer%3E%3E%3E getReductionQueueList() %7B%0A    %09return this.reductionQueueList;%0A    %7D%0A    %0A    @Override%0A    public Joiner getJoiner() %7B%0A    %09return this.joiner;%0A    %7D%0A    %0A    @Override%0A    public Barrier getBarrier() %7B%0A    %09return this.barrier;%0A    %7D%0A    	=73	+%0A    	=1483
//END OF FILE
//START OF FILE: comp533/mvc/Model.java
=41	+nkedList;%0Aimport java.util.Li	=25	+%0Aimport java.util.concurrent.BlockingQueue;%0A%0Aimport comp533.KeyValue;%0Aimport comp533.factory.Barrier;%0Aimport comp533.factory.Joiner;%0A	=316	+%0A%09List%3CLinkedList%3CKeyValue%3CString, Integer%3E%3E%3E getReductionQueueList();%0A%09BlockingQueue%3CKeyValue%3CString, Integer%3E%3E getKeyValueQueue();%0A%09Joiner getJoiner();%0A%09Barrier getBarrier();%0A%0A%09	=2
//END OF FILE
//START OF FILE: comp533/Slave.java
=403	-5	+his.n	=12	-5	+raceN	=66
//END OF FILE

//SESSION END

//SESSION START
32,Mon Feb 19 13:41:51 EST 2024,1318
//START OF FILE: comp533/mvc/ModelImpl.java
=262	+KeyValueImpl;%0Aimport comp533.	=714	+private Map%3CString, Integer%3E result;%0A%09	=796	+        this.result = new HashMap%3C%3E();%0A        %0A	=586	+    %09// clear and initialize data structures%0A	=29	+%0A    %09for (LinkedList%3CKeyValue%3CString, Integer%3E%3E q : this.reductionQueueList) %7B%0A    %09%09q.clear();%0A    %09%7D%0A    %09// Possible unblocking of slave threads%0A    %09for (Thread t : this.threads) %7B%0A    %09%09t.notify();%0A    %09%7D	=133	-4	=1	-1	=4	-1	+ize	=91	-4	=1	-1	=4	-1	+ize	=219	+ry %7B%0A        %09loadTokens(keyValuePairs);%0A        %7D catc	=1	+ (InterruptedExcept	=1	+on e) %7B%0A        %7D%0A    %7D%0A    %0A    private void loadToken	=1	+(List%3CKeyValue%3CString, Integer%3E%3E tokens) throws InterruptedException %7B%0A    %09for (KeyValue%3CString, Integer%3E kv : tokens) %7B%0A    %09%09traceEnqueueRequest(kv);%0A    %09%09keyValueQueue	=1	-1	+put(kv);%0A    %09%09traceEnqueue(kv);%0A    %09%7D%0A    %09for (int i = 0; i %3C this.nu	=1	+Thre	=1	+ds; i++) %7B%0A    %09%09keyValueQueue.	=1	+ut(new	=1	-1	+KeyValueImpl(null, 0));%0A    %09%7D%0A    %09getResult();%0A  	=1	+ %7D%0A    %0A    p	=1	+ivat	=1	+ voi	=1	+ getRes	=1	+lt() throws InterruptedEx	=2	+ption %7B%0A    %09this.joine	=2	+join();%0A    %09propertyChangeSupport.firePropertyChange(null);%0A    %09for (LinkedList%3CKeyValue%3CString, Integer%3E%3E 	=5	+tionQueue : reductionQu	=1	+ueList) %7B%0A    %09%09for 	=1	+KeyValue%3CString, Integer%3E 	=1	+v : reductionQueue) %7B%0A    %09%09%09result.put(kv.getK	=2	+(), kv.get	=5	-1	+());%0A    %09%09%09tr	=1	-1	+ceAddedToMap(kv, 	=1	+e	=1	+ult	=2	+%0A    %09%09%7D%0A    %09%7D	=571	+e);%0A    %09%09LinkedList%3CKeyValue%3CString, Integer%3E%3E reductionQueue = new LinkedList%3C%3E();%0A    %09%09this.reductionQueueList.add(reductionQueu	=315
//END OF FILE

//SESSION END

//SESSION START
33,Tue Feb 20 12:35:34 EST 2024,1712
//START OF FILE: comp533/mvc/ModelImpl.java
=296	+Impl	=3739	+%7D%0A   %09%09	=17	-2	+result	=4	-1	+d	=1	-1	+c	=1	+ionQueue	=2	-8	=467	+Impl	=558
//END OF FILE
//START OF FILE: comp533/Slave.java
=18	-2	=1	-20	+ub	=1	-2	=1	-19	=1	-13	+ 	=1	-4	=2	-11	=1	-1	=1	+f	=3	-16	=15	-4	=1	-2	=1	-16	=1	-9	=1	-4	=1	-54	=2	-7	=1	-30	=4	-66	=10	-68	=1	-72	=3
//END OF FILE
//START OF FILE: comp533/SlaveImpl.java
package comp533;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.concurrent.BlockingQueue;

import comp533.factory.Partitioner;
import comp533.factory.PartitionerFactory;
import comp533.factory.Reducer;
import comp533.factory.ReducerFactory;
import comp533.mvc.Model;
import gradingTools.comp533s19.assignment0.AMapReduceTracer;

public class SlaveImpl extends AMapReduceTracer implements Slave {
	private int slaveNum;
	private Model model;
	private List<KeyValue<String, Integer>> slaveList;
	private Reducer<String, Integer> reducer;

	public SlaveImpl(int slaveNumber, Model model) {
		this.slaveNum = slaveNumber;
		this.model = model;
		this.slaveList = new ArrayList<>();
		this.reducer = ReducerFactory.getReducer();
		
	}
	public void run() {
		try {
			while (true) {
				KeyValue<String, Integer> kv = this.model.getKeyValueQueue().take();
				if (kv.getKey() == null) {
					Map<String, Integer> partialMap = reducer.reduce(slaveList);
					partitionMap(partialMap);
				} else {
					this.slaveList.add(kv);
				}

			}
		} catch (InterruptedException e) {
			
		}
		
	}
	
	private void partitionMap(Map<String, Integer> partialMap) {
		Partitioner<String, Integer> partitioner = PartitionerFactory.getPartitioner();
		for (var key : partialMap.entrySet()) {
			int partitionId = partitioner.getPartition(key.getKey(), key.getValue(), model.getReductionQueueList().size());
			model.getReductionQueueList().get(partitionId).add(new KeyValueImpl(key.getKey(), key.getValue()));
		}
		try {
			model.getBarrier().barrier();
			reduceThisPartition();
		} catch (InterruptedException e) {
		
		}
	}
	
	private void reduceThisPartition() {
		List<KeyValue<String, Integer>> reductionQueue = model.getReductionQueueList().get(slaveNum);
		Map<String, Integer> reducedPartition = reducer.reduce(reductionQueue);
		reductionQueue.clear();
		for (var kv : reducedPartition.entrySet()) {
			reductionQueue.add(new KeyValueImpl(kv.getKey(), kv.getValue()));
		}
	}
	
	public synchronized void notifySlave() {
		this.notify();
		traceNotify();
	}

	public String toString() {
		return SLAVE;
	}
	
	
}

//END OF FILE
//START OF FILE: comp533/factory/Barrier.java
=52	+ void barrier() throws InterruptedException;	=4
//END OF FILE
//START OF FILE: comp533/MapReduceConfigurationImpl.java
=2649	+Impl	=2230
//END OF FILE
//START OF FILE: comp533/SlaveInterface.java
//@#$DELETED FILE&^%$
//END OF FILE

//SESSION END

//SESSION START
34,Tue Feb 20 12:46:44 EST 2024,216
//START OF FILE: comp533/mvc/ModelImpl.java
=3620	-1	+K	=7	-2	+%3CString, Int	=1	-1	+g	=1	-5	+r%3E kv = 	=25	+;%0A    %09%09traceEnqueueRequest(kv);%0A    %09%09keyValueQueue.put(kv);%0A    %09%09traceEnqueue(kv	=15	+Map%3CString, Integer%3E temp = result;%0A    %09	=10	+);%0A    %09propertyChangeSupport.firePropertyChange(%22Result%22, temp, this.result	=305	+this.	=1123
//END OF FILE
//START OF FILE: comp533/SlaveImpl.java
=1138	+synchronized 	=53	-0	=209	-1	+NumThr	=1	+a	=1	-13	=1	-8	=237	+synchronized 	=350	+	=7	-13	=113
//END OF FILE

//SESSION END

//SESSION START
36,Tue Feb 20 12:54:34 EST 2024,13
//START OF FILE: comp533/mvc/ModelImpl.java
=2440	+synchronized 	=2894
//END OF FILE

//SESSION END

//SESSION START
37,Tue Feb 20 13:02:06 EST 2024,64
//START OF FILE: comp533/mvc/ModelImpl.java
=122	-24	=31	+	=99	+import comp533.Slave;%0A	=929	-3	+Slav	=1	-2	=416	-6	=1090	-3	+Slav	=1	-2	=35	+Slave	=1603	-3	+Slav	=1	-2	=377	-3	+Slav	=1	-2	=13	-11	=18	+;%0A    %09%09Thread thread = new Thread(slave	=549
//END OF FILE
//START OF FILE: comp533/mvc/Model.java
=180	+Slave;%0Aimport comp533.	=343	-3	+Slav	=1	-2	=196
//END OF FILE
//START OF FILE: comp533/Slave.java
=73	+%09void notifySlave();%0A	=2
//END OF FILE

//SESSION END

//SESSION START
38,Tue Feb 20 13:34:08 EST 2024,54
//START OF FILE: comp533/mvc/ModelImpl.java
=1210	+slaves;%0A%09private List%3CThread%3E 	=9	-0	=381	-3	+slav	=1	-2	=1123	-3	+slav	=1	-2	=1666	-3	+slav	=1	-2	=416	+    %09%09threads.add(thread);%0A	=64	-2	+thre	=1	-2	+d	=14	-3	+slav	=1	-2	=457
//END OF FILE

//SESSION END

//SESSION START
39,Tue Feb 20 13:35:13 EST 2024,42
//START OF FILE: comp533/mvc/ModelImpl.java
=1671	+threads = new ArrayList%3C%3E();%0A        this.	=3752
//END OF FILE

//SESSION END

//SESSION START
40,Tue Feb 20 13:37:47 EST 2024,0
//START OF FILE: comp533/SlaveImpl.java
=2055	-5	+raceN	=12	-5	+his.n	=66
//END OF FILE

//SESSION END

//SESSION START
41,Tue Feb 20 13:39:27 EST 2024,6
//START OF FILE: comp533/mvc/ModelImpl.java
=2775	+//	=35	+//	=23	+//	=2632
//END OF FILE

//SESSION END

//SESSION START
42,Tue Feb 20 16:24:32 EST 2024,13
//START OF FILE: comp533/SlaveImpl.java
=2031	+synchronized 	=112
//END OF FILE

//SESSION END

//SESSION START
43,Tue Feb 20 18:37:04 EST 2024,260
//START OF FILE: comp533/mvc/ModelImpl.java
=754	+Iterator;%0Aimport java.util.	=1067	-84	=597	-13	=117	+this.barrier = new BarrierImpl(numThreads);%0A    %09this.joiner = new JoinerImpl(numThreads);%0A    %09	=143	-2	=35	-2	=23	-2	=388	-1	+Iterator%3CString%3E iterator = tokens.iterator();%0A        wh	=1	+le (iterator.ha	=1	+Nex	=1	+()) %7B%0A        %09try %7B%0A        %09%09loadToken(mapper.map(iterator.next()));%0A        %09%7D catch (InterruptedException e) %7B%0A        %09%09%0A        %09%7D%0A        %7D%0A        for (int i = 0; i 	=1	+ this.numThreads; i++) %7B%0A        %09	=25	-1	=1	+endTo	=2	+n = new Ke	=6	-15	+I	=1	-1	=1	+l	=1	-4	=1	-1	+ull, 0	=3	+        	=22	+        	=1	-2	+tr	=1	+ceEnqueueRequest(en	=6	+);%0A                %09thi	=1	+.keyValueQueue.put	=1	+endToken);%0A                %09traceEnqueue(this.	=8	-1	+Queue);%0A                %7D c	=1	+tch (InterruptedExcept	=1	+on e) %7B%0A                %09%0A                %7D%0A        %7D%0A        t	=1	+y %7B%0A        %09thi	=1	+.joiner.join();%0A        %09merge(	=46	+        %09%0A	=10	+        %0A	=28	-7	+merg	=1	-2	=1	-9	+) %7B%0A    %09M	=1	-3	+p	=17	-1	=2	-2	=1	-3	+mp	=1	-2	+= 	=1	-2	+e	=1	-7	=1	-1	+l	=1	-13	+;	=11	+List%3C	=25	-19	+%3E	=1	-9	=5	-13	=1	+:	=1	-5	+r	=1	-4	+d	=1	-1	+ction	=5	-3	+Lis	=1	-3	=1	-2	=1	-22	+%7B	=6	-6	=6	-45	=29	-5	+:	=1	-1	+qu	=1	-4	=2	-10	+)	=1	-3	+%7B	=7	-1	+%09	=1	-2	=1	-3	+s	=1	-6	+lt.p	=1	-2	=4	+.getKey(	=1	-5	+,	=1	-2	=1	+v.g	=1	-1	+t	=5	-9	=1	-2	+)	=9	-17	+%7D	=6	-6	=1	-5	=2	-8	+ac	=1	-1	+Add	=1	-3	+dToMap(	=4	-2	+,	=1	-1	+qu	=1	-1	=1	-10	=1	-8	=8	-70	+%7D	=29	+loadToken(KeyValue%3CStrin	=1	+, Int	=1	+ger%3E 	=1	-1	+ok	=1	-5	+n	=38	-9	=1	-18	+ac	=1	-6	+E	=1	-1	+qu	=1	-1	=1	-9	+eR	=1	-4	+qu	=1	-1	+s	=1	-7	=1	+toke	=1	-3	=8	-12	+th	=2	-3	+.k	=7	-28	=5	-6	+.p	=1	-1	=1	-1	+(t	=1	-5	+k	=1	-4	+n	=1	-2	+;	=6	-3	+t	=1	-6	=1	-2	+c	=1	-5	+E	=1	-27	+q	=4	-11	+(	=5	-11	=1	-6	=2	-10	=5	-52	=7	-7	=379	-1	=119	+, slave.toString() + i	=21	-73	=177	+%0A   %09%09propertyChangeSupport.firePropertyChange(%22Threads%22, null, this.threads);%0A   %09%09for (Thread t : threads) t.start();	=305
//END OF FILE
//START OF FILE: comp533/factory/Joiner.java
=94	+%09void finished();%0A	=2
//END OF FILE
//START OF FILE: comp533/mvc/ControllerImpl.java
=524	+currentString = in.nextLine();%0A%09%09%09	=493
//END OF FILE
//START OF FILE: comp533/SlaveImpl.java
=1070	-1	=44	-4	=3	-3	=13	-13	=280	+synchronized(model.getReductionQueueList().get(partitionId)) %7B%0A%09%09%09%09	=102	+%09%7D%0A%09%09	=40	+);%0A%09%09%09traceSplitAfterBarrier(this.slaveNum, model.getReductionQueueList().get(slaveNum)	=68	-3	=373	+%0A%09%09this.model.getJoiner().finished();	=139
//END OF FILE
//START OF FILE: comp533/factory/PartitionerImpl.java
=586	+length() %3E 0 ? key.	=9	+ : null	=424
//END OF FILE
//START OF FILE: comp533/count/TokenCountingMapper.java
=596	-5	=25	-1	=5	-5	=6	-1	=12	-5	=25	-1	=2	-3	+v	=7	-113	=14	-8	=1	-2	+pu	=1	-2	=3	-1	=5	-4	=17	-3	+v	=13	-3	+v	=83
//END OF FILE
//START OF FILE: comp533/factory/Mapper.java
=111	-5	=14	-1	=5	-5	=6	-1	=7	-1	=5
//END OF FILE
//START OF FILE: comp533/factory/JoinerImpl.java
=518	-2	=1	-2	+f	=206
//END OF FILE

//SESSION END

//SESSION START
44,Tue Feb 20 18:37:42 EST 2024,-13
//START OF FILE: comp533/factory/JoinerImpl.java
=342	-13	=371
//END OF FILE

//SESSION END

//SESSION START
45,Tue Feb 20 18:39:11 EST 2024,26
//START OF FILE: comp533/factory/JoinerImpl.java
=342	+synchronized 	=39	+;%0A%09%09count = 0	=332
//END OF FILE

//SESSION END

//SESSION START
46,Tue Feb 20 18:41:45 EST 2024,21
//START OF FILE: comp533/factory/JoinerImpl.java
=386	+if (count == numThreads) %7B%0A%09%09%09	=12	-10	+%7D	=331
//END OF FILE

//SESSION END

//SESSION START
48,Tue Feb 20 18:49:23 EST 2024,68
//START OF FILE: comp533/mvc/ModelImpl.java
=2923	+Map%3CString, Integer%3E oldResult = result;%0A%09%09	=89	+System.exit(0);%0A%09%09	=51	-2	+o	=1	+dResu	=1	+t	=2	-4	+result	=2576
//END OF FILE

//SESSION END

//SESSION START
49,Tue Feb 20 22:17:15 EST 2024,14
//START OF FILE: comp533/mvc/ModelImpl.java
=3055	-18	=51	-6	+n	=2	-1	+l	=8	+);%0A%09%09System.out.println(%22HELLO WORLD%22	=2576
//END OF FILE

//SESSION END

//SESSION START
50,Tue Feb 20 22:19:46 EST 2024,-37
//START OF FILE: comp533/mvc/ModelImpl.java
=3122	-37	=2572
//END OF FILE

//SESSION END

//SESSION START
52,Tue Feb 20 23:00:13 EST 2024,35
//START OF FILE: comp533/mvc/ModelImpl.java
=2445	+synchronized 	=3249
//END OF FILE
//START OF FILE: comp533/SlaveImpl.java
=898	+traceDequeue(kv);%0A%09%09%09%09	=1430
//END OF FILE

//SESSION END

//SESSION START
53,Tue Feb 20 23:02:44 EST 2024,152
//START OF FILE: comp533/SlaveImpl.java
=1048	+%09slaveWait();%0A%09%09%09%09	=85	+%0A%09%09%7D%0A%09%7D%0A%09%0A%09private synchronized void slaveWait() %7B%0A%09%09try %7B%0A%09%09this.wait();%0A%09%09%7D catch (InterruptedException e) %7B%0A%09%09%09e.printStackTrace();	=1217
//END OF FILE

//SESSION END

//SESSION START
55,Tue Feb 20 23:07:00 EST 2024,-38
//START OF FILE: comp533/mvc/ControllerImpl.java
=448	+while (true) %7B%0A%09%09%09	=22	-51	=120	-25	=124	-0	=32	+();%0A    %09in.nextLine	=229
//END OF FILE

//SESSION END

//SESSION START
58,Tue Feb 20 23:16:19 EST 2024,168
//START OF FILE: comp533/mvc/ModelImpl.java
=4602	+void terminate() %7B%0A    %09for (Thread t : threads) %7B%0A    %09%09t.interrupt();%0A    %09%7D%0A    %7D%0A    %0A    @Override%0A    public 	=1105
//END OF FILE
//START OF FILE: comp533/mvc/Model.java
=742	+%09void terminate();%0A	=4
//END OF FILE
//START OF FILE: comp533/mvc/ControllerImpl.java
=559	+%7B%0A%09%09%09%09model.terminate();%0A%09%09%09%09	=6	+%0A%09%09%09%7D	=448
//END OF FILE

//SESSION END

//SESSION START
60,Thu Feb 22 12:50:50 EST 2024,-19
//START OF FILE: comp533/mvc/ModelImpl.java
=5215	+.start();%0A    %09%09thread	=259	-41	=307
//END OF FILE

//SESSION END

//SESSION START
61,Thu Feb 22 13:57:04 EST 2024,85
//START OF FILE: comp533/SlaveImpl.java
=1584	+Li	=1	+t%3CKe	=1	+Value%3CStri	=1	+g, Integer%3E%3E 	=1	-1	+ur	=1	+Partiti	=2	-5	+ = 	=46	-3	+;	=4	-2	+synchr	=1	-8	+niz	=2	+ (c	=1	-1	+rrParti	=4	-10	=1	-6	+ %7B%0A%09%09%09%09currP	=8	-3	=272	-13	=164	+;%0A%09%09synchronized (reductionQueue) %7B%0A%09%09%09reducedPartition	=35	+%09	=28	+%09	=45	+%09	=71	+%09	=2	+%09	=36	+%0A%09%09%7D	=139
//END OF FILE

//SESSION END

//SESSION START
62,Thu Feb 22 14:22:31 EST 2024,281
//START OF FILE: comp533/mvc/ModelImpl.java
=3304	+%09List%3CKeyValue%3CString,	=2	+n	=2	+ge	=1	+%3E%3E m	=1	+ppedTokens = mapper.map(	=2	+kens);%0A       %09Ite	=1	+ator%3CKeyValue	=7	+, Integer%3E	=13	-1	+mappedT	=25	-1	+%09	=36	-1	+%09	=1	+KeyValue%3CS	=2	-1	+ing,	=1	-2	+Integer%3E	=1	+kv	=1	+= iterator.next();%0A	=6	+ 	=2	-2	+tr	=1	-4	+c	=1	+E	=1	-5	+queu	=1	-5	+Request	=1	-1	+kv);%0A       %09%09	=1	-1	=1	-1	+y %7B%0A       %09%09%09	=1	-2	+his	=1	-1	+keyValueQueu	=1	-1	+.pu	=2	-2	+kv	=10	-1	+%09	=43	-1	+%09	=2	+e.printStackTrace();	=8	-1	+%09	=10	+%09%09traceEnqueue(kv);%0A	=1	+      %09	=929	-108	=1238
//END OF FILE
//START OF FILE: comp533/SlaveImpl.java
=1212	+%09	=1375
//END OF FILE
//START OF FILE: comp533/count/TokenCountingMapper.java
=596	+List%3C	=25	+%3E	=5	+List%3C	=6	+%3E	=12	+List%3C	=25	+%3E	=2	-1	+eys	=7	+ArrayList%3C%3E();%0A%09%09Iterator%3CString%3E iterator = input.iterator();%0A%0A%09%09while (iterator.hasNext()) %7B%0A%09%09%09keys.add(new 	=14	+terator.	=1	-2	+ex	=1	+()	=3	+)	=5	+%7D%0A%09%09	=17	-1	+eys	=13	-1	+eys	=83
//END OF FILE
//START OF FILE: comp533/factory/Mapper.java
=111	+List%3C	=14	+%3E	=5	+List%3C	=6	+%3E	=1	-1	=1	-2	+oke	=1	-1	+s	=5
//END OF FILE

//SESSION END

//SESSION START
64,Thu Feb 22 14:27:31 EST 2024,33
//START OF FILE: comp533/mvc/ModelImpl.java
=2580	-5	+k	=1	-9	+yV	=1	-8	=1	-2	=1	-4	=1	-20	+Qu	=1	-5	+u	=1	-6	+.cl	=1	+a	=1	-4	=1	-10	=99	-0	=6	+%0A    %09this.barrier = new BarrierImpl(numThreads);%0A    %09this.joiner = new JoinerImpl(numThreads);	=3153
//END OF FILE

//SESSION END

//SESSION START
65,Thu Feb 22 14:28:36 EST 2024,-13
//START OF FILE: comp533/factory/JoinerImpl.java
=495	-13	=252
//END OF FILE

//SESSION END

//SESSION START
66,Thu Feb 22 14:29:01 EST 2024,13
//START OF FILE: comp533/factory/JoinerImpl.java
=495	+synchronized 	=252
//END OF FILE

//SESSION END

//SESSION START
67,Thu Feb 22 14:31:26 EST 2024,0
//START OF FILE: comp533/mvc/ModelImpl.java
=2570	+%09%09String oldVal = inputBuffer;%0A%09%09inputBuffer = newVal;%0A%09%09Map%3CString, Integer%3E oldResult = result;%0A%09%09propertyChangeSupport.firePropertyChange(%22InputString%22, oldVal, newVal);%0A	=341	-173	=2870
//END OF FILE

//SESSION END

//SESSION START
69,Thu Feb 22 14:37:40 EST 2024,3
//START OF FILE: comp533/factory/JoinerImpl.java
=552	+wh	=1	-1	+le	=206
//END OF FILE

//SESSION END

//SESSION START
71,Thu Feb 22 14:43:58 EST 2024,201
//START OF FILE: comp533/mvc/ModelImpl.java
=4400	-1	+Iterat	=2	-2	+%3CLinked	=31	+%3E	=6	+ListIterator	=1	-1	+=	=1	+this.	=18	+.iterator();%0A%0A    %09while (queueListIterator.hasNext()	=10	-1	+Iterator%3CKeyValue%3CString, Integer%3E%3E queue = queueListIterat	=2	+.next().iterator();%0A    %09%09while	=2	+queue.hasNext()) %7B%0A    %09%09%09	=29	-1	+=	=6	+.next(	=1	-2	+;	=1437
//END OF FILE

//SESSION END

//SESSION START
72,Thu Feb 22 14:49:20 EST 2024,32
//START OF FILE: comp533/IntegerSummer.java
=677	+initSlaveThreads();%0A%09controller.	=21
//END OF FILE

//SESSION END

//SESSION START
73,Thu Feb 22 15:08:56 EST 2024,18
//START OF FILE: comp533/mvc/ModelImpl.java
=3590	+y %7B%0A       %09%09%09tr	=30	+%09	=3	-1	+his.ke	=1	-2	+ValueQueue.put(kv);	=12	+raceEnqueue(t	=17	-7	=88	-27	=2377
//END OF FILE

//SESSION END

//SESSION START
74,Fri Feb 23 13:20:59 EST 2024,-93
//START OF FILE: comp533/mvc/ModelImpl.java
=3944	-4	=6	-4	=44	-4	=59	-4	=35	-4	=47	-4	=13	+e.printStackTrace();	=1	-4	=657	-101	=1236	-2
//END OF FILE
//START OF FILE: comp533/SlaveImpl.java
=1485	+synchronized (model.getReductionQueueList()) %7B%0A%09%09%09%09	=97	+%09	=98	-34	=874
//END OF FILE

//SESSION END

//SESSION START
75,Fri Feb 23 13:31:17 EST 2024,-2
//START OF FILE: comp533/mvc/ModelImpl.java
=1357	-6	=51	+	=651	-6	=705	+	=10	-6	=1627	-6	=1637
//END OF FILE
//START OF FILE: comp533/mvc/Model.java
=41	-29	=502	-6	=187
//END OF FILE
//START OF FILE: comp533/SlaveImpl.java
=65	+nkedList;%0Aimport java.util.Li	=1377	-18	+Lis	=1	+%3CL	=1	+st%3CKeyV	=2	-4	+u	=1	-1	+%3CS	=2	-7	+ing,	=1	-7	+I	=1	-2	+tege	=1	-4	+%3E%3E%3E qu	=1	-1	+ueList	=1	-1	+= 	=29	+;%0A%09%09%0A%09%09for (var key : partialMap.entrySet()	=4	-1	=103	-1	=48	-19	+q	=8	-2	=19	+%09%09%09synchronized (currPartition) %7B%0A	=162	-19	+q	=8	-2	=682
//END OF FILE

//SESSION END

//SESSION START
76,Fri Feb 23 13:34:44 EST 2024,53
//START OF FILE: comp533/SlaveImpl.java
=854	+traceDequeueRequest(this.model.getKeyValueQueue());%0A%09%09%09%09	=697	-3	=1109
//END OF FILE

//SESSION END

//SESSION START
77,Fri Feb 23 13:35:56 EST 2024,16
//START OF FILE: comp533/SlaveImpl.java
=1299	+raceWait();%0A%09%09%09t	=1417
//END OF FILE

//SESSION END

//SESSION START
81,Fri Feb 23 13:50:31 EST 2024,42
//START OF FILE: comp533/mvc/ModelImpl.java
=3922	-3	+%09synchronized	=1	+(	=1	-1	+his.ke	=1	+ValueQueue)	=11	+%09%09try	=1	+%7B%0A	=3	+     %09%09	=40	-4	+%09%09	=35	-2	=8	-2	+%09%09	=43	-4	+%09%09	=43	-4	+%09%09	=30	+%09%09%7D%0A	=4	+    %09	=1875
//END OF FILE

//SESSION END

//SESSION START
83,Fri Feb 23 17:53:27 EST 2024,-3
//START OF FILE: comp533/mvc/ModelImpl.java
=3134	-4	+0	=2942
//END OF FILE

//SESSION END

//SESSION START
84,Fri Feb 23 17:56:26 EST 2024,13
//START OF FILE: comp533/mvc/ModelImpl.java
=3907	-1	+(Integer) null	=2169
//END OF FILE

//SESSION END

//SESSION START
85,Fri Feb 23 17:59:03 EST 2024,-13
//START OF FILE: comp533/mvc/ModelImpl.java
=3907	-14	+0	=2169
//END OF FILE

//SESSION END

//SESSION START
86,Fri Feb 23 19:41:46 EST 2024,12
//START OF FILE: comp533/mvc/ModelImpl.java
=5360	+this.	=3	+Threads	=714
//END OF FILE

//SESSION END

//SESSION START
87,Fri Feb 23 19:43:28 EST 2024,-4
//START OF FILE: comp533/factory/JoinerImpl.java
=552	-2	=1	-2	+f	=87	+%7D%0A%09	=45	-4	=70
//END OF FILE

//SESSION END

//SESSION START
88,Fri Feb 23 19:44:50 EST 2024,27
//START OF FILE: comp533/factory/JoinerImpl.java
=632	+hile (count %3C numThreads) w	=127
//END OF FILE

//SESSION END

//SESSION START
89,Fri Feb 23 19:50:08 EST 2024,8
//START OF FILE: comp533/mvc/ModelImpl.java
=3134	-1	+oldResult	=2954
//END OF FILE

//SESSION END

//SESSION START
90,Fri Feb 23 20:18:20 EST 2024,80
//START OF FILE: comp533/mvc/ModelImpl.java
=2764	+%09%09this.result.clear();%0A	=3333
//END OF FILE
//START OF FILE: comp533/mvc/View.java
=22	+import java.beans.PropertyChangeListener;%0A%0A	=21	+ extends PropertyChangeListener	=6
//END OF FILE
//START OF FILE: comp533/SlaveImpl.java
=1103	+slaveList.clear();%0A%09%09%09%09%09	=1629
//END OF FILE
//START OF FILE: comp533/mvc/ViewImpl.java
=224	-24	=198
//END OF FILE
//START OF FILE: comp533/IntegerSummer.java
=483	-11	+%09	=4	+lImp	=28	-48	=10	+Impl	=38	+);%0A%09ViewImpl view = new ViewImpl(	=108
//END OF FILE

//SESSION END

//SESSION START
91,Fri Feb 23 20:19:20 EST 2024,1
//START OF FILE: comp533/RunA2Tests.java
=934	-1	+10	=143
//END OF FILE

//SESSION END

//SESSION START
92,Fri Feb 23 20:32:10 EST 2024,-13
//START OF FILE: comp533/mvc/ModelImpl.java
=3938	-1	+null	=2181
//END OF FILE
//START OF FILE: comp533/KeyValueImpl.java
=157	-1	+I	=2	+eger	=222	-20	=108
//END OF FILE

//SESSION END

//SESSION START
93,Fri Feb 23 20:35:06 EST 2024,4
//START OF FILE: comp533/KeyValueImpl.java
=113	-1	+I	=2	+eger	=378
//END OF FILE

//SESSION END

//SESSION START
94,Fri Feb 23 20:38:03 EST 2024,19
//START OF FILE: comp533/mvc/ModelImpl.java
=4839	+if (queue != null) 	=1284
//END OF FILE

//SESSION END

//SESSION START
95,Fri Feb 23 20:42:59 EST 2024,65
//START OF FILE: comp533/mvc/ModelImpl.java
=4613	-5	+Lis	=1	-2	=28	-1	+thisQ	=31	+;%0A    %09%09Iterator%3CKeyValue%3CString, Integer%3E%3E queue = thisQueue	=199	-1	+thisQ	=1261
//END OF FILE

//SESSION END

//SESSION START
100,Fri Feb 23 20:59:01 EST 2024,69
//START OF FILE: comp533/mvc/ModelImpl.java
=2830	+ueue	=37	+ueue	=175	+hread	=25	+hread	=1754	-1	+eyValue	=36	-1	+eyValue	=12	-1	+eyValue	=1335
//END OF FILE
//START OF FILE: comp533/SlaveImpl.java
=937	-1	+eyValue	=59	-1	+eyValue	=12	-1	+eyValue	=198	-1	+eyValue	=619	+ent	=61	+ent	=21	+ent	=845
//END OF FILE

//SESSION END

//SESSION START
101,Fri Feb 23 20:59:52 EST 2024,18
//START OF FILE: comp533/mvc/ModelImpl.java
=3586	-1	+eyValue	=66	-1	+eyValue	=37	-1	+eyValue	=2551
//END OF FILE

//SESSION END

//SESSION START
102,Fri Feb 23 21:02:26 EST 2024,76
//START OF FILE: comp533/SlaveImpl.java
=2499	-1	+eyValue	=75	-1	+eyValue	=12	-1	+eyValue	=200
//END OF FILE
//START OF FILE: comp533/TokenCounter.java
=112	+import comp533.mvc.Controller;%0Aimport comp533.mvc.Model;%0Aimport comp533.mvc.View;%0A	=78	-4	=38	-4	=47	-4	=331
//END OF FILE
//START OF FILE: comp533/IntegerSummer.java
=489	-4	=37	-4	=46	-4	=129
//END OF FILE

//SESSION END

//SESSION START
103,Fri Feb 23 21:04:37 EST 2024,31
//START OF FILE: comp533/factory/PartitionerImpl.java
=283	+%3CString, 	=1	-3	+nteger%3E	=758
//END OF FILE
//START OF FILE: comp533/count/TokenCountingMapper.java
=360	-3	+Mapp	=1	-5	+r%3CS	=1	+r	=3	-4	+, Integ	=2	+%3E	=591
//END OF FILE
//START OF FILE: comp533/sum/IntSummingMapper.java
=358	+Mapper%3CString, 	=3	-6	+e	=1	-4	=2	+%3E	=60	+Mapper%3CString, 	=3	-6	+e	=1	-4	=2	+%3E	=607
//END OF FILE

//SESSION END

//SESSION START
104,Fri Feb 23 21:05:01 EST 2024,13
//START OF FILE: comp533/factory/PartitionerImpl.java
=210	+%3CString, 	=1	-3	+nteger%3E	=844
//END OF FILE

//SESSION END

//SESSION START
105,Fri Feb 23 21:07:56 EST 2024,66
//START OF FILE: comp533/mvc/ModelImpl.java
=5087	+hreads	=21	+hreads	=1153
//END OF FILE
//START OF FILE: comp533/factory/BarrierImpl.java
=371	+@Override%0A%09	=432
//END OF FILE
//START OF FILE: comp533/SlaveImpl.java
=2675	+@Override%0A%09	=132
//END OF FILE
//START OF FILE: comp533/factory/PartitionerImpl.java
=1017	+@Override%0A%09	=54
//END OF FILE
//START OF FILE: comp533/factory/Barrier.java
=52	-1	+%0A%09	=44	-1	=1	-1
//END OF FILE
//START OF FILE: comp533/factory/JoinerImpl.java
=335	+@Override%0A%09	=151	+%0A%09@Override	=300
//END OF FILE

//SESSION END

//SESSION START
106,Fri Feb 23 21:10:37 EST 2024,81
//START OF FILE: comp533/factory/BarrierImpl.java
=764	+@Override%0A%09	=50
//END OF FILE
//START OF FILE: comp533/SlaveImpl.java
=2766	+@Override%0A%09	=52
//END OF FILE
//START OF FILE: comp533/factory/JoinerImpl.java
=386	+traceJoinerFinishedTask(this, numThreads, count);%0A%09%09	=53	-3	=12	-6	+R	=1	-2	+le	=2	-1	+e	=26	+%0A%09%09%7D	=264	+%0A%09@Override	=52
//END OF FILE

//SESSION END

//SESSION START
107,Fri Feb 23 21:12:58 EST 2024,11
//START OF FILE: comp533/mvc/ModelImpl.java
=2947	+raceBarrierCreated(barrier, numThreads);%0A    %09t	=28	+numThreads);%0A    %09traceJoinerCreated(joiner, 	=3298
//END OF FILE
//START OF FILE: comp533/factory/BarrierImpl.java
=325	-41	=459
//END OF FILE
//START OF FILE: comp533/factory/JoinerImpl.java
=291	-40	=536
//END OF FILE

//SESSION END

//SESSION START
108,Fri Feb 23 21:14:43 EST 2024,22
//START OF FILE: comp533/mvc/ModelImpl.java
=5742	-1	+);%0A  	=1	+ %09%09thread.setName(	=621
//END OF FILE

//SESSION END

//SESSION START
109,Fri Feb 23 21:15:45 EST 2024,9
//START OF FILE: comp533/mvc/ModelImpl.java
=3135	-6	+in	=1	-5	+ i =	=1	-1	+0;	=1	-2	=1	-2	+ %3C 	=6	+.size(); i++	=10	-4	+sl	=1	-1	+ves.get(i)	=7	-5	=3198
//END OF FILE

//SESSION END

//SESSION START
110,Fri Feb 23 21:16:11 EST 2024,12
//START OF FILE: comp533/SlaveImpl.java
=803	+%0A%09@Override%0A	=2026
//END OF FILE

//SESSION END
